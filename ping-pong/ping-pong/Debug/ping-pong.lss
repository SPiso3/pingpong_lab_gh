
ping-pong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000bae  00000c42  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800112  00800112  00000c54  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c54  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cb0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010ac  00000000  00000000  00000dec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1d  00000000  00000000  00001e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000724  00000000  00000000  000028b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000228  00000000  00000000  00002fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056a  00000000  00000000  00003204  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000445  00000000  00000000  0000376e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003bb3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__vector_19>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__vector_23>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee ea       	ldi	r30, 0xAE	; 174
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 31       	cpi	r26, 0x12	; 18
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e1       	ldi	r26, 0x12	; 18
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ad 31       	cpi	r26, 0x1D	; 29
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 59 01 	call	0x2b2	; 0x2b2 <main>
  a6:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <OLED_write_cmd>:

//--private

void OLED_write_cmd(uint8_t cmd){
	volatile char *ext_mem = (char *) OLED_CMD_ADDR;
	ext_mem[0x0000] = cmd;
  ae:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xee3>
  b2:	08 95       	ret

000000b4 <OLED_init>:
#include "../include/XMEM.h"
#include "../include/OLED.h"
#include "../../misc/fonts.h"

void OLED_init(){
	OLED_write_cmd(0xAE);    //OFF
  b4:	8e ea       	ldi	r24, 0xAE	; 174
  b6:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	
	//!!! DONT TOUCH THESE SETTINGS !!! ---------- (from datasheet)
	OLED_write_cmd(0xa1);    //segment remap
  ba:	81 ea       	ldi	r24, 0xA1	; 161
  bc:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xda);    //common pads hardware: alternative
  c0:	8a ed       	ldi	r24, 0xDA	; 218
  c2:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x12);
  c6:	82 e1       	ldi	r24, 0x12	; 18
  c8:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xc8);    //common output scan direction:com63~com0
  cc:	88 ec       	ldi	r24, 0xC8	; 200
  ce:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xa8);    //multiplex ration mode:63
  d2:	88 ea       	ldi	r24, 0xA8	; 168
  d4:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x3f);
  d8:	8f e3       	ldi	r24, 0x3F	; 63
  da:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xd5);    //display divide ratio/osc. freq. mode
  de:	85 ed       	ldi	r24, 0xD5	; 213
  e0:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x80);
  e4:	80 e8       	ldi	r24, 0x80	; 128
  e6:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xd9);	 //set pre-charge period
  ea:	89 ed       	ldi	r24, 0xD9	; 217
  ec:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x21);
  f0:	81 e2       	ldi	r24, 0x21	; 33
  f2:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xdb);    //VCOM deselect level mode
  f6:	8b ed       	ldi	r24, 0xDB	; 219
  f8:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x30);
  fc:	80 e3       	ldi	r24, 0x30	; 48
  fe:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xad);    //master configuration
 102:	8d ea       	ldi	r24, 0xAD	; 173
 104:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x00);
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	//-------------------------------------------	
	
	OLED_write_cmd(0xD3);	//set display offset
 10e:	83 ed       	ldi	r24, 0xD3	; 211
 110:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x00);	
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	
	OLED_write_cmd(0x20);   //Set Memory Addressing Mode
 11a:	80 e2       	ldi	r24, 0x20	; 32
 11c:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0b10);	//PAGE addressing mode => col: auto, page: manual - if arrive at the end re-begin writing on the same page
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	
	OLED_write_cmd(0x81);   //contrast control
 126:	81 e8       	ldi	r24, 0x81	; 129
 128:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x50);	//contr lvl : 0-255
 12c:	80 e5       	ldi	r24, 0x50	; 80
 12e:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	
	OLED_write_cmd(0xA6);    //A6 = normal B&W (A5 = inverse W&B)
 132:	86 ea       	ldi	r24, 0xA6	; 166
 134:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xA4);    //resume GDDRAM content (A5 = blank screen ON)
 138:	84 ea       	ldi	r24, 0xA4	; 164
 13a:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0xAF);    //ON
 13e:	8f ea       	ldi	r24, 0xAF	; 175
 140:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
 144:	08 95       	ret

00000146 <OLED_goto_row>:
}

//--positioning

void OLED_goto_row(uint8_t row){
	OLED_write_cmd(0xB0 + row);
 146:	80 55       	subi	r24, 0x50	; 80
 148:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
 14c:	08 95       	ret

0000014e <OLED_goto_col>:
}
void OLED_goto_col(uint8_t col){
 14e:	cf 93       	push	r28
 150:	c8 2f       	mov	r28, r24
	OLED_write_cmd(col & 0x0F); // Set low nibble col address : 00-0F
 152:	8f 70       	andi	r24, 0x0F	; 15
 154:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
	OLED_write_cmd(0x10 | (col >> 4));   // Set high nibble col address : 10-1F
 158:	8c 2f       	mov	r24, r28
 15a:	82 95       	swap	r24
 15c:	8f 70       	andi	r24, 0x0F	; 15
 15e:	80 61       	ori	r24, 0x10	; 16
 160:	0e 94 57 00 	call	0xae	; 0xae <OLED_write_cmd>
}
 164:	cf 91       	pop	r28
 166:	08 95       	ret

00000168 <OLED_goto_pos>:
void OLED_goto_pos(uint8_t row, uint8_t col) {
 168:	cf 93       	push	r28
 16a:	c6 2f       	mov	r28, r22
	OLED_goto_row(row);
 16c:	0e 94 a3 00 	call	0x146	; 0x146 <OLED_goto_row>
	OLED_goto_col(col);
 170:	8c 2f       	mov	r24, r28
 172:	0e 94 a7 00 	call	0x14e	; 0x14e <OLED_goto_col>
}
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <OLED_write_data>:
	volatile char *ext_mem = (char *) OLED_CMD_ADDR;
	ext_mem[0x0000] = cmd;
}
void OLED_write_data(uint8_t data){
	volatile char *ext_mem = (char *) OLED_DATA_ADDR;
	ext_mem[0x0000] = data;
 17a:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x10e3>
 17e:	08 95       	ret

00000180 <OLED_clear_row>:
	OLED_goto_col(col);
}

//--clearing

void OLED_clear_row(uint8_t row) {
 180:	cf 93       	push	r28
	OLED_goto_pos(row,0);
 182:	60 e0       	ldi	r22, 0x00	; 0
 184:	0e 94 b4 00 	call	0x168	; 0x168 <OLED_goto_pos>
	for (uint8_t col = 0; col < 128; col++) {
 188:	c0 e0       	ldi	r28, 0x00	; 0
 18a:	04 c0       	rjmp	.+8      	; 0x194 <OLED_clear_row+0x14>
		OLED_write_data(0x00);
 18c:	80 e0       	ldi	r24, 0x00	; 0
 18e:	0e 94 bd 00 	call	0x17a	; 0x17a <OLED_write_data>

//--clearing

void OLED_clear_row(uint8_t row) {
	OLED_goto_pos(row,0);
	for (uint8_t col = 0; col < 128; col++) {
 192:	cf 5f       	subi	r28, 0xFF	; 255
 194:	cc 23       	and	r28, r28
 196:	d4 f7       	brge	.-12     	; 0x18c <OLED_clear_row+0xc>
		OLED_write_data(0x00);
	}
}
 198:	cf 91       	pop	r28
 19a:	08 95       	ret

0000019c <OLED_clear>:
void OLED_clear(){
 19c:	cf 93       	push	r28
	for (uint8_t page = 0; page < 8; page++) {
 19e:	c0 e0       	ldi	r28, 0x00	; 0
 1a0:	04 c0       	rjmp	.+8      	; 0x1aa <OLED_clear+0xe>
		OLED_clear_row(page);
 1a2:	8c 2f       	mov	r24, r28
 1a4:	0e 94 c0 00 	call	0x180	; 0x180 <OLED_clear_row>
	for (uint8_t col = 0; col < 128; col++) {
		OLED_write_data(0x00);
	}
}
void OLED_clear(){
	for (uint8_t page = 0; page < 8; page++) {
 1a8:	cf 5f       	subi	r28, 0xFF	; 255
 1aa:	c8 30       	cpi	r28, 0x08	; 8
 1ac:	d0 f3       	brcs	.-12     	; 0x1a2 <OLED_clear+0x6>
		OLED_clear_row(page);
	}
}
 1ae:	cf 91       	pop	r28
 1b0:	08 95       	ret

000001b2 <OLED_reset>:

//--utilities

void OLED_reset() {
	OLED_clear();
 1b2:	0e 94 ce 00 	call	0x19c	; 0x19c <OLED_clear>
	OLED_goto_pos(0,0);
 1b6:	60 e0       	ldi	r22, 0x00	; 0
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	0e 94 b4 00 	call	0x168	; 0x168 <OLED_goto_pos>
 1be:	08 95       	ret

000001c0 <UART_init>:

//--------

void UART_init(unsigned int ubrr) {

	cli(); //disable interrupts
 1c0:	f8 94       	cli

	UBRR0H = (unsigned char)(ubrr>>8);	//set baud rate
 1c2:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 1c4:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1<<RXEN0) | (1<<TXEN0) | (1<<TXCIE0) | (1<<RXCIE0);  //enable RX,TX and TXC,RXC interrupts
 1c6:	88 ed       	ldi	r24, 0xD8	; 216
 1c8:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3<<UCSZ00); //frame format: 8 data bits, 2 stop bit, parity: none
 1ca:	8e e8       	ldi	r24, 0x8E	; 142
 1cc:	80 bd       	out	0x20, r24	; 32
	
	// redirecting stout
	FILE *uart_output = fdevopen(UART_putchar, NULL);
 1ce:	60 e0       	ldi	r22, 0x00	; 0
 1d0:	70 e0       	ldi	r23, 0x00	; 0
 1d2:	8f e0       	ldi	r24, 0x0F	; 15
 1d4:	91 e0       	ldi	r25, 0x01	; 1
 1d6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <fdevopen>
	stdout = uart_output;
 1da:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <__iob+0x3>
 1de:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <__iob+0x2>
	
	sei();  //re-enable global interrupt
 1e2:	78 94       	sei
	
	//set led pins
	DDRB |= (1<<TXLED) | (1<<RXLED);	//direction: output
 1e4:	87 b3       	in	r24, 0x17	; 23
 1e6:	86 60       	ori	r24, 0x06	; 6
 1e8:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<TXLED) | (1<<RXLED);	//turn them off (sink-mode)
 1ea:	88 b3       	in	r24, 0x18	; 24
 1ec:	86 60       	ori	r24, 0x06	; 6
 1ee:	88 bb       	out	0x18, r24	; 24
 1f0:	08 95       	ret

000001f2 <__vector_23>:
}

//-------- TRANSMISSION -----------

ISR(USART0_TXC_vect) {
 1f2:	1f 92       	push	r1
 1f4:	0f 92       	push	r0
 1f6:	0f b6       	in	r0, 0x3f	; 63
 1f8:	0f 92       	push	r0
 1fa:	11 24       	eor	r1, r1
 1fc:	8f 93       	push	r24
 1fe:	9f 93       	push	r25
	PORTB ^= (1<<TXLED); //blink as response of successful transmission
 200:	98 b3       	in	r25, 0x18	; 24
 202:	84 e0       	ldi	r24, 0x04	; 4
 204:	89 27       	eor	r24, r25
 206:	88 bb       	out	0x18, r24	; 24
}
 208:	9f 91       	pop	r25
 20a:	8f 91       	pop	r24
 20c:	0f 90       	pop	r0
 20e:	0f be       	out	0x3f, r0	; 63
 210:	0f 90       	pop	r0
 212:	1f 90       	pop	r1
 214:	18 95       	reti

00000216 <UART_transmit>:

void UART_transmit(char data){
	while (!(UCSR0A & (1<<UDRE0))); //wait until UDRE->1 = ready
 216:	5d 9b       	sbis	0x0b, 5	; 11
 218:	fe cf       	rjmp	.-4      	; 0x216 <UART_transmit>
	UDR0 = data;
 21a:	8c b9       	out	0x0c, r24	; 12
 21c:	08 95       	ret

0000021e <UART_putchar>:
}

// using two different functions transmit data (maybe unify them under putchar) / maybe adding ring buffer to write data also
int UART_putchar(char c, FILE *stream)
{	UART_transmit(c);
 21e:	0e 94 0b 01 	call	0x216	; 0x216 <UART_transmit>
	return 0;
}
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	08 95       	ret

00000228 <UART_receive>:

//---------- RECEIVING ------------

char UART_receive(){
	//frame-error OR data-over-run OR parity-error
	if ( UCSR0A & ((1<<FE0)|(1<<DOR0)|(1<<UPE0)) )
 228:	8b b1       	in	r24, 0x0b	; 11
 22a:	8c 71       	andi	r24, 0x1C	; 28
 22c:	31 f4       	brne	.+12     	; 0x23a <UART_receive+0x12>
		return -1;
	
	PORTB ^= (1<<RXLED); //blink led to report success of rx
 22e:	98 b3       	in	r25, 0x18	; 24
 230:	82 e0       	ldi	r24, 0x02	; 2
 232:	89 27       	eor	r24, r25
 234:	88 bb       	out	0x18, r24	; 24
	return UDR0;
 236:	8c b1       	in	r24, 0x0c	; 12
 238:	08 95       	ret
//---------- RECEIVING ------------

char UART_receive(){
	//frame-error OR data-over-run OR parity-error
	if ( UCSR0A & ((1<<FE0)|(1<<DOR0)|(1<<UPE0)) )
		return -1;
 23a:	8f ef       	ldi	r24, 0xFF	; 255
	
	PORTB ^= (1<<RXLED); //blink led to report success of rx
	return UDR0;
}
 23c:	08 95       	ret

0000023e <__vector_19>:

// Interrupt service routine for receiving data
ISR(USART0_RXC_vect) {
 23e:	1f 92       	push	r1
 240:	0f 92       	push	r0
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	0f 92       	push	r0
 246:	11 24       	eor	r1, r1
 248:	2f 93       	push	r18
 24a:	3f 93       	push	r19
 24c:	4f 93       	push	r20
 24e:	5f 93       	push	r21
 250:	6f 93       	push	r22
 252:	7f 93       	push	r23
 254:	8f 93       	push	r24
 256:	9f 93       	push	r25
 258:	af 93       	push	r26
 25a:	bf 93       	push	r27
 25c:	ef 93       	push	r30
 25e:	ff 93       	push	r31
	received_data = UART_receive();
 260:	0e 94 14 01 	call	0x228	; 0x228 <UART_receive>
 264:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	printf("@echo: %c\n\r", received_data);
 268:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 26c:	1f 92       	push	r1
 26e:	8f 93       	push	r24
 270:	86 e0       	ldi	r24, 0x06	; 6
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	9f 93       	push	r25
 276:	8f 93       	push	r24
 278:	0e 94 b3 01 	call	0x366	; 0x366 <printf>
 27c:	0f 90       	pop	r0
 27e:	0f 90       	pop	r0
 280:	0f 90       	pop	r0
 282:	0f 90       	pop	r0
 284:	ff 91       	pop	r31
 286:	ef 91       	pop	r30
 288:	bf 91       	pop	r27
 28a:	af 91       	pop	r26
 28c:	9f 91       	pop	r25
 28e:	8f 91       	pop	r24
 290:	7f 91       	pop	r23
 292:	6f 91       	pop	r22
 294:	5f 91       	pop	r21
 296:	4f 91       	pop	r20
 298:	3f 91       	pop	r19
 29a:	2f 91       	pop	r18
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <XMEM_init>:
#include "../include/XMEM.h"

void XMEM_init(){
	MCUCR |= (1<<SRE);
 2a6:	85 b7       	in	r24, 0x35	; 53
 2a8:	80 68       	ori	r24, 0x80	; 128
 2aa:	85 bf       	out	0x35, r24	; 53
	SFIOR = (1<<XMM2); //XMM=100 - mask PA7-4 for jtag
 2ac:	80 e2       	ldi	r24, 0x20	; 32
 2ae:	80 bf       	out	0x30, r24	; 48
 2b0:	08 95       	ret

000002b2 <main>:
#include "misc/utils.h"
#include "drivers/include/OLED.h"

int main(void) {
	UART_init(MYUBRR);
 2b2:	8f e1       	ldi	r24, 0x1F	; 31
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <UART_init>
	XMEM_init();
 2ba:	0e 94 53 01 	call	0x2a6	; 0x2a6 <XMEM_init>
	OLED_init();
 2be:	0e 94 5a 00 	call	0xb4	; 0xb4 <OLED_init>
	OLED_reset();
 2c2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <OLED_reset>
	OLED_clear();
 2c6:	0e 94 ce 00 	call	0x19c	; 0x19c <OLED_clear>
}
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	08 95       	ret

000002d0 <fdevopen>:
 2d0:	0f 93       	push	r16
 2d2:	1f 93       	push	r17
 2d4:	cf 93       	push	r28
 2d6:	df 93       	push	r29
 2d8:	00 97       	sbiw	r24, 0x00	; 0
 2da:	31 f4       	brne	.+12     	; 0x2e8 <fdevopen+0x18>
 2dc:	61 15       	cp	r22, r1
 2de:	71 05       	cpc	r23, r1
 2e0:	19 f4       	brne	.+6      	; 0x2e8 <fdevopen+0x18>
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	3a c0       	rjmp	.+116    	; 0x35c <fdevopen+0x8c>
 2e8:	8b 01       	movw	r16, r22
 2ea:	ec 01       	movw	r28, r24
 2ec:	6e e0       	ldi	r22, 0x0E	; 14
 2ee:	70 e0       	ldi	r23, 0x00	; 0
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	0e 94 aa 03 	call	0x754	; 0x754 <calloc>
 2f8:	fc 01       	movw	r30, r24
 2fa:	89 2b       	or	r24, r25
 2fc:	91 f3       	breq	.-28     	; 0x2e2 <fdevopen+0x12>
 2fe:	80 e8       	ldi	r24, 0x80	; 128
 300:	83 83       	std	Z+3, r24	; 0x03
 302:	01 15       	cp	r16, r1
 304:	11 05       	cpc	r17, r1
 306:	71 f0       	breq	.+28     	; 0x324 <fdevopen+0x54>
 308:	13 87       	std	Z+11, r17	; 0x0b
 30a:	02 87       	std	Z+10, r16	; 0x0a
 30c:	81 e8       	ldi	r24, 0x81	; 129
 30e:	83 83       	std	Z+3, r24	; 0x03
 310:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__iob>
 314:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <__iob+0x1>
 318:	89 2b       	or	r24, r25
 31a:	21 f4       	brne	.+8      	; 0x324 <fdevopen+0x54>
 31c:	f0 93 14 01 	sts	0x0114, r31	; 0x800114 <__iob+0x1>
 320:	e0 93 13 01 	sts	0x0113, r30	; 0x800113 <__iob>
 324:	20 97       	sbiw	r28, 0x00	; 0
 326:	c9 f0       	breq	.+50     	; 0x35a <fdevopen+0x8a>
 328:	d1 87       	std	Z+9, r29	; 0x09
 32a:	c0 87       	std	Z+8, r28	; 0x08
 32c:	83 81       	ldd	r24, Z+3	; 0x03
 32e:	82 60       	ori	r24, 0x02	; 2
 330:	83 83       	std	Z+3, r24	; 0x03
 332:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <__iob+0x2>
 336:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <__iob+0x3>
 33a:	89 2b       	or	r24, r25
 33c:	71 f4       	brne	.+28     	; 0x35a <fdevopen+0x8a>
 33e:	f0 93 16 01 	sts	0x0116, r31	; 0x800116 <__iob+0x3>
 342:	e0 93 15 01 	sts	0x0115, r30	; 0x800115 <__iob+0x2>
 346:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <__iob+0x4>
 34a:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <__iob+0x5>
 34e:	89 2b       	or	r24, r25
 350:	21 f4       	brne	.+8      	; 0x35a <fdevopen+0x8a>
 352:	f0 93 18 01 	sts	0x0118, r31	; 0x800118 <__iob+0x5>
 356:	e0 93 17 01 	sts	0x0117, r30	; 0x800117 <__iob+0x4>
 35a:	cf 01       	movw	r24, r30
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	1f 91       	pop	r17
 362:	0f 91       	pop	r16
 364:	08 95       	ret

00000366 <printf>:
 366:	a0 e0       	ldi	r26, 0x00	; 0
 368:	b0 e0       	ldi	r27, 0x00	; 0
 36a:	e9 eb       	ldi	r30, 0xB9	; 185
 36c:	f1 e0       	ldi	r31, 0x01	; 1
 36e:	0c 94 ae 05 	jmp	0xb5c	; 0xb5c <__prologue_saves__+0x20>
 372:	ae 01       	movw	r20, r28
 374:	4b 5f       	subi	r20, 0xFB	; 251
 376:	5f 4f       	sbci	r21, 0xFF	; 255
 378:	fa 01       	movw	r30, r20
 37a:	61 91       	ld	r22, Z+
 37c:	71 91       	ld	r23, Z+
 37e:	af 01       	movw	r20, r30
 380:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <__iob+0x2>
 384:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <__iob+0x3>
 388:	0e 94 c9 01 	call	0x392	; 0x392 <vfprintf>
 38c:	e2 e0       	ldi	r30, 0x02	; 2
 38e:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__epilogue_restores__+0x20>

00000392 <vfprintf>:
 392:	ab e0       	ldi	r26, 0x0B	; 11
 394:	b0 e0       	ldi	r27, 0x00	; 0
 396:	ef ec       	ldi	r30, 0xCF	; 207
 398:	f1 e0       	ldi	r31, 0x01	; 1
 39a:	0c 94 9e 05 	jmp	0xb3c	; 0xb3c <__prologue_saves__>
 39e:	6c 01       	movw	r12, r24
 3a0:	7b 01       	movw	r14, r22
 3a2:	8a 01       	movw	r16, r20
 3a4:	fc 01       	movw	r30, r24
 3a6:	17 82       	std	Z+7, r1	; 0x07
 3a8:	16 82       	std	Z+6, r1	; 0x06
 3aa:	83 81       	ldd	r24, Z+3	; 0x03
 3ac:	81 ff       	sbrs	r24, 1
 3ae:	cc c1       	rjmp	.+920    	; 0x748 <__stack+0x249>
 3b0:	ce 01       	movw	r24, r28
 3b2:	01 96       	adiw	r24, 0x01	; 1
 3b4:	3c 01       	movw	r6, r24
 3b6:	f6 01       	movw	r30, r12
 3b8:	93 81       	ldd	r25, Z+3	; 0x03
 3ba:	f7 01       	movw	r30, r14
 3bc:	93 fd       	sbrc	r25, 3
 3be:	85 91       	lpm	r24, Z+
 3c0:	93 ff       	sbrs	r25, 3
 3c2:	81 91       	ld	r24, Z+
 3c4:	7f 01       	movw	r14, r30
 3c6:	88 23       	and	r24, r24
 3c8:	09 f4       	brne	.+2      	; 0x3cc <vfprintf+0x3a>
 3ca:	ba c1       	rjmp	.+884    	; 0x740 <__stack+0x241>
 3cc:	85 32       	cpi	r24, 0x25	; 37
 3ce:	39 f4       	brne	.+14     	; 0x3de <vfprintf+0x4c>
 3d0:	93 fd       	sbrc	r25, 3
 3d2:	85 91       	lpm	r24, Z+
 3d4:	93 ff       	sbrs	r25, 3
 3d6:	81 91       	ld	r24, Z+
 3d8:	7f 01       	movw	r14, r30
 3da:	85 32       	cpi	r24, 0x25	; 37
 3dc:	29 f4       	brne	.+10     	; 0x3e8 <vfprintf+0x56>
 3de:	b6 01       	movw	r22, r12
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 3e6:	e7 cf       	rjmp	.-50     	; 0x3b6 <vfprintf+0x24>
 3e8:	91 2c       	mov	r9, r1
 3ea:	21 2c       	mov	r2, r1
 3ec:	31 2c       	mov	r3, r1
 3ee:	ff e1       	ldi	r31, 0x1F	; 31
 3f0:	f3 15       	cp	r31, r3
 3f2:	d8 f0       	brcs	.+54     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 3f4:	8b 32       	cpi	r24, 0x2B	; 43
 3f6:	79 f0       	breq	.+30     	; 0x416 <__DATA_REGION_LENGTH__+0x16>
 3f8:	38 f4       	brcc	.+14     	; 0x408 <__DATA_REGION_LENGTH__+0x8>
 3fa:	80 32       	cpi	r24, 0x20	; 32
 3fc:	79 f0       	breq	.+30     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 3fe:	83 32       	cpi	r24, 0x23	; 35
 400:	a1 f4       	brne	.+40     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 402:	23 2d       	mov	r18, r3
 404:	20 61       	ori	r18, 0x10	; 16
 406:	1d c0       	rjmp	.+58     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 408:	8d 32       	cpi	r24, 0x2D	; 45
 40a:	61 f0       	breq	.+24     	; 0x424 <__DATA_REGION_LENGTH__+0x24>
 40c:	80 33       	cpi	r24, 0x30	; 48
 40e:	69 f4       	brne	.+26     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 410:	23 2d       	mov	r18, r3
 412:	21 60       	ori	r18, 0x01	; 1
 414:	16 c0       	rjmp	.+44     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 416:	83 2d       	mov	r24, r3
 418:	82 60       	ori	r24, 0x02	; 2
 41a:	38 2e       	mov	r3, r24
 41c:	e3 2d       	mov	r30, r3
 41e:	e4 60       	ori	r30, 0x04	; 4
 420:	3e 2e       	mov	r3, r30
 422:	2a c0       	rjmp	.+84     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 424:	f3 2d       	mov	r31, r3
 426:	f8 60       	ori	r31, 0x08	; 8
 428:	1d c0       	rjmp	.+58     	; 0x464 <__DATA_REGION_LENGTH__+0x64>
 42a:	37 fc       	sbrc	r3, 7
 42c:	2d c0       	rjmp	.+90     	; 0x488 <__DATA_REGION_LENGTH__+0x88>
 42e:	20 ed       	ldi	r18, 0xD0	; 208
 430:	28 0f       	add	r18, r24
 432:	2a 30       	cpi	r18, 0x0A	; 10
 434:	40 f0       	brcs	.+16     	; 0x446 <__DATA_REGION_LENGTH__+0x46>
 436:	8e 32       	cpi	r24, 0x2E	; 46
 438:	b9 f4       	brne	.+46     	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 43a:	36 fc       	sbrc	r3, 6
 43c:	81 c1       	rjmp	.+770    	; 0x740 <__stack+0x241>
 43e:	23 2d       	mov	r18, r3
 440:	20 64       	ori	r18, 0x40	; 64
 442:	32 2e       	mov	r3, r18
 444:	19 c0       	rjmp	.+50     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 446:	36 fe       	sbrs	r3, 6
 448:	06 c0       	rjmp	.+12     	; 0x456 <__DATA_REGION_LENGTH__+0x56>
 44a:	8a e0       	ldi	r24, 0x0A	; 10
 44c:	98 9e       	mul	r9, r24
 44e:	20 0d       	add	r18, r0
 450:	11 24       	eor	r1, r1
 452:	92 2e       	mov	r9, r18
 454:	11 c0       	rjmp	.+34     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 456:	ea e0       	ldi	r30, 0x0A	; 10
 458:	2e 9e       	mul	r2, r30
 45a:	20 0d       	add	r18, r0
 45c:	11 24       	eor	r1, r1
 45e:	22 2e       	mov	r2, r18
 460:	f3 2d       	mov	r31, r3
 462:	f0 62       	ori	r31, 0x20	; 32
 464:	3f 2e       	mov	r3, r31
 466:	08 c0       	rjmp	.+16     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 468:	8c 36       	cpi	r24, 0x6C	; 108
 46a:	21 f4       	brne	.+8      	; 0x474 <__DATA_REGION_LENGTH__+0x74>
 46c:	83 2d       	mov	r24, r3
 46e:	80 68       	ori	r24, 0x80	; 128
 470:	38 2e       	mov	r3, r24
 472:	02 c0       	rjmp	.+4      	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 474:	88 36       	cpi	r24, 0x68	; 104
 476:	41 f4       	brne	.+16     	; 0x488 <__DATA_REGION_LENGTH__+0x88>
 478:	f7 01       	movw	r30, r14
 47a:	93 fd       	sbrc	r25, 3
 47c:	85 91       	lpm	r24, Z+
 47e:	93 ff       	sbrs	r25, 3
 480:	81 91       	ld	r24, Z+
 482:	7f 01       	movw	r14, r30
 484:	81 11       	cpse	r24, r1
 486:	b3 cf       	rjmp	.-154    	; 0x3ee <vfprintf+0x5c>
 488:	98 2f       	mov	r25, r24
 48a:	9f 7d       	andi	r25, 0xDF	; 223
 48c:	95 54       	subi	r25, 0x45	; 69
 48e:	93 30       	cpi	r25, 0x03	; 3
 490:	28 f4       	brcc	.+10     	; 0x49c <__DATA_REGION_LENGTH__+0x9c>
 492:	0c 5f       	subi	r16, 0xFC	; 252
 494:	1f 4f       	sbci	r17, 0xFF	; 255
 496:	9f e3       	ldi	r25, 0x3F	; 63
 498:	99 83       	std	Y+1, r25	; 0x01
 49a:	0d c0       	rjmp	.+26     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 49c:	83 36       	cpi	r24, 0x63	; 99
 49e:	31 f0       	breq	.+12     	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
 4a0:	83 37       	cpi	r24, 0x73	; 115
 4a2:	71 f0       	breq	.+28     	; 0x4c0 <__DATA_REGION_LENGTH__+0xc0>
 4a4:	83 35       	cpi	r24, 0x53	; 83
 4a6:	09 f0       	breq	.+2      	; 0x4aa <__DATA_REGION_LENGTH__+0xaa>
 4a8:	59 c0       	rjmp	.+178    	; 0x55c <__stack+0x5d>
 4aa:	21 c0       	rjmp	.+66     	; 0x4ee <__DATA_REGION_LENGTH__+0xee>
 4ac:	f8 01       	movw	r30, r16
 4ae:	80 81       	ld	r24, Z
 4b0:	89 83       	std	Y+1, r24	; 0x01
 4b2:	0e 5f       	subi	r16, 0xFE	; 254
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	88 24       	eor	r8, r8
 4b8:	83 94       	inc	r8
 4ba:	91 2c       	mov	r9, r1
 4bc:	53 01       	movw	r10, r6
 4be:	13 c0       	rjmp	.+38     	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
 4c0:	28 01       	movw	r4, r16
 4c2:	f2 e0       	ldi	r31, 0x02	; 2
 4c4:	4f 0e       	add	r4, r31
 4c6:	51 1c       	adc	r5, r1
 4c8:	f8 01       	movw	r30, r16
 4ca:	a0 80       	ld	r10, Z
 4cc:	b1 80       	ldd	r11, Z+1	; 0x01
 4ce:	36 fe       	sbrs	r3, 6
 4d0:	03 c0       	rjmp	.+6      	; 0x4d8 <__DATA_REGION_LENGTH__+0xd8>
 4d2:	69 2d       	mov	r22, r9
 4d4:	70 e0       	ldi	r23, 0x00	; 0
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <__DATA_REGION_LENGTH__+0xdc>
 4d8:	6f ef       	ldi	r22, 0xFF	; 255
 4da:	7f ef       	ldi	r23, 0xFF	; 255
 4dc:	c5 01       	movw	r24, r10
 4de:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <strnlen>
 4e2:	4c 01       	movw	r8, r24
 4e4:	82 01       	movw	r16, r4
 4e6:	f3 2d       	mov	r31, r3
 4e8:	ff 77       	andi	r31, 0x7F	; 127
 4ea:	3f 2e       	mov	r3, r31
 4ec:	16 c0       	rjmp	.+44     	; 0x51a <__stack+0x1b>
 4ee:	28 01       	movw	r4, r16
 4f0:	22 e0       	ldi	r18, 0x02	; 2
 4f2:	42 0e       	add	r4, r18
 4f4:	51 1c       	adc	r5, r1
 4f6:	f8 01       	movw	r30, r16
 4f8:	a0 80       	ld	r10, Z
 4fa:	b1 80       	ldd	r11, Z+1	; 0x01
 4fc:	36 fe       	sbrs	r3, 6
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <__stack+0x7>
 500:	69 2d       	mov	r22, r9
 502:	70 e0       	ldi	r23, 0x00	; 0
 504:	02 c0       	rjmp	.+4      	; 0x50a <__stack+0xb>
 506:	6f ef       	ldi	r22, 0xFF	; 255
 508:	7f ef       	ldi	r23, 0xFF	; 255
 50a:	c5 01       	movw	r24, r10
 50c:	0e 94 e7 04 	call	0x9ce	; 0x9ce <strnlen_P>
 510:	4c 01       	movw	r8, r24
 512:	f3 2d       	mov	r31, r3
 514:	f0 68       	ori	r31, 0x80	; 128
 516:	3f 2e       	mov	r3, r31
 518:	82 01       	movw	r16, r4
 51a:	33 fc       	sbrc	r3, 3
 51c:	1b c0       	rjmp	.+54     	; 0x554 <__stack+0x55>
 51e:	82 2d       	mov	r24, r2
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	88 16       	cp	r8, r24
 524:	99 06       	cpc	r9, r25
 526:	b0 f4       	brcc	.+44     	; 0x554 <__stack+0x55>
 528:	b6 01       	movw	r22, r12
 52a:	80 e2       	ldi	r24, 0x20	; 32
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 532:	2a 94       	dec	r2
 534:	f4 cf       	rjmp	.-24     	; 0x51e <__stack+0x1f>
 536:	f5 01       	movw	r30, r10
 538:	37 fc       	sbrc	r3, 7
 53a:	85 91       	lpm	r24, Z+
 53c:	37 fe       	sbrs	r3, 7
 53e:	81 91       	ld	r24, Z+
 540:	5f 01       	movw	r10, r30
 542:	b6 01       	movw	r22, r12
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 54a:	21 10       	cpse	r2, r1
 54c:	2a 94       	dec	r2
 54e:	21 e0       	ldi	r18, 0x01	; 1
 550:	82 1a       	sub	r8, r18
 552:	91 08       	sbc	r9, r1
 554:	81 14       	cp	r8, r1
 556:	91 04       	cpc	r9, r1
 558:	71 f7       	brne	.-36     	; 0x536 <__stack+0x37>
 55a:	e8 c0       	rjmp	.+464    	; 0x72c <__stack+0x22d>
 55c:	84 36       	cpi	r24, 0x64	; 100
 55e:	11 f0       	breq	.+4      	; 0x564 <__stack+0x65>
 560:	89 36       	cpi	r24, 0x69	; 105
 562:	41 f5       	brne	.+80     	; 0x5b4 <__stack+0xb5>
 564:	f8 01       	movw	r30, r16
 566:	37 fe       	sbrs	r3, 7
 568:	07 c0       	rjmp	.+14     	; 0x578 <__stack+0x79>
 56a:	60 81       	ld	r22, Z
 56c:	71 81       	ldd	r23, Z+1	; 0x01
 56e:	82 81       	ldd	r24, Z+2	; 0x02
 570:	93 81       	ldd	r25, Z+3	; 0x03
 572:	0c 5f       	subi	r16, 0xFC	; 252
 574:	1f 4f       	sbci	r17, 0xFF	; 255
 576:	08 c0       	rjmp	.+16     	; 0x588 <__stack+0x89>
 578:	60 81       	ld	r22, Z
 57a:	71 81       	ldd	r23, Z+1	; 0x01
 57c:	07 2e       	mov	r0, r23
 57e:	00 0c       	add	r0, r0
 580:	88 0b       	sbc	r24, r24
 582:	99 0b       	sbc	r25, r25
 584:	0e 5f       	subi	r16, 0xFE	; 254
 586:	1f 4f       	sbci	r17, 0xFF	; 255
 588:	f3 2d       	mov	r31, r3
 58a:	ff 76       	andi	r31, 0x6F	; 111
 58c:	3f 2e       	mov	r3, r31
 58e:	97 ff       	sbrs	r25, 7
 590:	09 c0       	rjmp	.+18     	; 0x5a4 <__stack+0xa5>
 592:	90 95       	com	r25
 594:	80 95       	com	r24
 596:	70 95       	com	r23
 598:	61 95       	neg	r22
 59a:	7f 4f       	sbci	r23, 0xFF	; 255
 59c:	8f 4f       	sbci	r24, 0xFF	; 255
 59e:	9f 4f       	sbci	r25, 0xFF	; 255
 5a0:	f0 68       	ori	r31, 0x80	; 128
 5a2:	3f 2e       	mov	r3, r31
 5a4:	2a e0       	ldi	r18, 0x0A	; 10
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	a3 01       	movw	r20, r6
 5aa:	0e 94 40 05 	call	0xa80	; 0xa80 <__ultoa_invert>
 5ae:	88 2e       	mov	r8, r24
 5b0:	86 18       	sub	r8, r6
 5b2:	45 c0       	rjmp	.+138    	; 0x63e <__stack+0x13f>
 5b4:	85 37       	cpi	r24, 0x75	; 117
 5b6:	31 f4       	brne	.+12     	; 0x5c4 <__stack+0xc5>
 5b8:	23 2d       	mov	r18, r3
 5ba:	2f 7e       	andi	r18, 0xEF	; 239
 5bc:	b2 2e       	mov	r11, r18
 5be:	2a e0       	ldi	r18, 0x0A	; 10
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	25 c0       	rjmp	.+74     	; 0x60e <__stack+0x10f>
 5c4:	93 2d       	mov	r25, r3
 5c6:	99 7f       	andi	r25, 0xF9	; 249
 5c8:	b9 2e       	mov	r11, r25
 5ca:	8f 36       	cpi	r24, 0x6F	; 111
 5cc:	c1 f0       	breq	.+48     	; 0x5fe <__stack+0xff>
 5ce:	18 f4       	brcc	.+6      	; 0x5d6 <__stack+0xd7>
 5d0:	88 35       	cpi	r24, 0x58	; 88
 5d2:	79 f0       	breq	.+30     	; 0x5f2 <__stack+0xf3>
 5d4:	b5 c0       	rjmp	.+362    	; 0x740 <__stack+0x241>
 5d6:	80 37       	cpi	r24, 0x70	; 112
 5d8:	19 f0       	breq	.+6      	; 0x5e0 <__stack+0xe1>
 5da:	88 37       	cpi	r24, 0x78	; 120
 5dc:	21 f0       	breq	.+8      	; 0x5e6 <__stack+0xe7>
 5de:	b0 c0       	rjmp	.+352    	; 0x740 <__stack+0x241>
 5e0:	e9 2f       	mov	r30, r25
 5e2:	e0 61       	ori	r30, 0x10	; 16
 5e4:	be 2e       	mov	r11, r30
 5e6:	b4 fe       	sbrs	r11, 4
 5e8:	0d c0       	rjmp	.+26     	; 0x604 <__stack+0x105>
 5ea:	fb 2d       	mov	r31, r11
 5ec:	f4 60       	ori	r31, 0x04	; 4
 5ee:	bf 2e       	mov	r11, r31
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <__stack+0x105>
 5f2:	34 fe       	sbrs	r3, 4
 5f4:	0a c0       	rjmp	.+20     	; 0x60a <__stack+0x10b>
 5f6:	29 2f       	mov	r18, r25
 5f8:	26 60       	ori	r18, 0x06	; 6
 5fa:	b2 2e       	mov	r11, r18
 5fc:	06 c0       	rjmp	.+12     	; 0x60a <__stack+0x10b>
 5fe:	28 e0       	ldi	r18, 0x08	; 8
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	05 c0       	rjmp	.+10     	; 0x60e <__stack+0x10f>
 604:	20 e1       	ldi	r18, 0x10	; 16
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	02 c0       	rjmp	.+4      	; 0x60e <__stack+0x10f>
 60a:	20 e1       	ldi	r18, 0x10	; 16
 60c:	32 e0       	ldi	r19, 0x02	; 2
 60e:	f8 01       	movw	r30, r16
 610:	b7 fe       	sbrs	r11, 7
 612:	07 c0       	rjmp	.+14     	; 0x622 <__stack+0x123>
 614:	60 81       	ld	r22, Z
 616:	71 81       	ldd	r23, Z+1	; 0x01
 618:	82 81       	ldd	r24, Z+2	; 0x02
 61a:	93 81       	ldd	r25, Z+3	; 0x03
 61c:	0c 5f       	subi	r16, 0xFC	; 252
 61e:	1f 4f       	sbci	r17, 0xFF	; 255
 620:	06 c0       	rjmp	.+12     	; 0x62e <__stack+0x12f>
 622:	60 81       	ld	r22, Z
 624:	71 81       	ldd	r23, Z+1	; 0x01
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 5f       	subi	r16, 0xFE	; 254
 62c:	1f 4f       	sbci	r17, 0xFF	; 255
 62e:	a3 01       	movw	r20, r6
 630:	0e 94 40 05 	call	0xa80	; 0xa80 <__ultoa_invert>
 634:	88 2e       	mov	r8, r24
 636:	86 18       	sub	r8, r6
 638:	fb 2d       	mov	r31, r11
 63a:	ff 77       	andi	r31, 0x7F	; 127
 63c:	3f 2e       	mov	r3, r31
 63e:	36 fe       	sbrs	r3, 6
 640:	0d c0       	rjmp	.+26     	; 0x65c <__stack+0x15d>
 642:	23 2d       	mov	r18, r3
 644:	2e 7f       	andi	r18, 0xFE	; 254
 646:	a2 2e       	mov	r10, r18
 648:	89 14       	cp	r8, r9
 64a:	58 f4       	brcc	.+22     	; 0x662 <__stack+0x163>
 64c:	34 fe       	sbrs	r3, 4
 64e:	0b c0       	rjmp	.+22     	; 0x666 <__stack+0x167>
 650:	32 fc       	sbrc	r3, 2
 652:	09 c0       	rjmp	.+18     	; 0x666 <__stack+0x167>
 654:	83 2d       	mov	r24, r3
 656:	8e 7e       	andi	r24, 0xEE	; 238
 658:	a8 2e       	mov	r10, r24
 65a:	05 c0       	rjmp	.+10     	; 0x666 <__stack+0x167>
 65c:	b8 2c       	mov	r11, r8
 65e:	a3 2c       	mov	r10, r3
 660:	03 c0       	rjmp	.+6      	; 0x668 <__stack+0x169>
 662:	b8 2c       	mov	r11, r8
 664:	01 c0       	rjmp	.+2      	; 0x668 <__stack+0x169>
 666:	b9 2c       	mov	r11, r9
 668:	a4 fe       	sbrs	r10, 4
 66a:	0f c0       	rjmp	.+30     	; 0x68a <__stack+0x18b>
 66c:	fe 01       	movw	r30, r28
 66e:	e8 0d       	add	r30, r8
 670:	f1 1d       	adc	r31, r1
 672:	80 81       	ld	r24, Z
 674:	80 33       	cpi	r24, 0x30	; 48
 676:	21 f4       	brne	.+8      	; 0x680 <__stack+0x181>
 678:	9a 2d       	mov	r25, r10
 67a:	99 7e       	andi	r25, 0xE9	; 233
 67c:	a9 2e       	mov	r10, r25
 67e:	09 c0       	rjmp	.+18     	; 0x692 <__stack+0x193>
 680:	a2 fe       	sbrs	r10, 2
 682:	06 c0       	rjmp	.+12     	; 0x690 <__stack+0x191>
 684:	b3 94       	inc	r11
 686:	b3 94       	inc	r11
 688:	04 c0       	rjmp	.+8      	; 0x692 <__stack+0x193>
 68a:	8a 2d       	mov	r24, r10
 68c:	86 78       	andi	r24, 0x86	; 134
 68e:	09 f0       	breq	.+2      	; 0x692 <__stack+0x193>
 690:	b3 94       	inc	r11
 692:	a3 fc       	sbrc	r10, 3
 694:	11 c0       	rjmp	.+34     	; 0x6b8 <__stack+0x1b9>
 696:	a0 fe       	sbrs	r10, 0
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <__stack+0x1a7>
 69a:	b2 14       	cp	r11, r2
 69c:	88 f4       	brcc	.+34     	; 0x6c0 <__stack+0x1c1>
 69e:	28 0c       	add	r2, r8
 6a0:	92 2c       	mov	r9, r2
 6a2:	9b 18       	sub	r9, r11
 6a4:	0e c0       	rjmp	.+28     	; 0x6c2 <__stack+0x1c3>
 6a6:	b2 14       	cp	r11, r2
 6a8:	60 f4       	brcc	.+24     	; 0x6c2 <__stack+0x1c3>
 6aa:	b6 01       	movw	r22, r12
 6ac:	80 e2       	ldi	r24, 0x20	; 32
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 6b4:	b3 94       	inc	r11
 6b6:	f7 cf       	rjmp	.-18     	; 0x6a6 <__stack+0x1a7>
 6b8:	b2 14       	cp	r11, r2
 6ba:	18 f4       	brcc	.+6      	; 0x6c2 <__stack+0x1c3>
 6bc:	2b 18       	sub	r2, r11
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <__stack+0x1c5>
 6c0:	98 2c       	mov	r9, r8
 6c2:	21 2c       	mov	r2, r1
 6c4:	a4 fe       	sbrs	r10, 4
 6c6:	10 c0       	rjmp	.+32     	; 0x6e8 <__stack+0x1e9>
 6c8:	b6 01       	movw	r22, r12
 6ca:	80 e3       	ldi	r24, 0x30	; 48
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 6d2:	a2 fe       	sbrs	r10, 2
 6d4:	17 c0       	rjmp	.+46     	; 0x704 <__stack+0x205>
 6d6:	a1 fc       	sbrc	r10, 1
 6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <__stack+0x1e1>
 6da:	88 e7       	ldi	r24, 0x78	; 120
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <__stack+0x1e5>
 6e0:	88 e5       	ldi	r24, 0x58	; 88
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	b6 01       	movw	r22, r12
 6e6:	0c c0       	rjmp	.+24     	; 0x700 <__stack+0x201>
 6e8:	8a 2d       	mov	r24, r10
 6ea:	86 78       	andi	r24, 0x86	; 134
 6ec:	59 f0       	breq	.+22     	; 0x704 <__stack+0x205>
 6ee:	a1 fe       	sbrs	r10, 1
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <__stack+0x1f7>
 6f2:	8b e2       	ldi	r24, 0x2B	; 43
 6f4:	01 c0       	rjmp	.+2      	; 0x6f8 <__stack+0x1f9>
 6f6:	80 e2       	ldi	r24, 0x20	; 32
 6f8:	a7 fc       	sbrc	r10, 7
 6fa:	8d e2       	ldi	r24, 0x2D	; 45
 6fc:	b6 01       	movw	r22, r12
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 704:	89 14       	cp	r8, r9
 706:	38 f4       	brcc	.+14     	; 0x716 <__stack+0x217>
 708:	b6 01       	movw	r22, r12
 70a:	80 e3       	ldi	r24, 0x30	; 48
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 712:	9a 94       	dec	r9
 714:	f7 cf       	rjmp	.-18     	; 0x704 <__stack+0x205>
 716:	8a 94       	dec	r8
 718:	f3 01       	movw	r30, r6
 71a:	e8 0d       	add	r30, r8
 71c:	f1 1d       	adc	r31, r1
 71e:	80 81       	ld	r24, Z
 720:	b6 01       	movw	r22, r12
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 728:	81 10       	cpse	r8, r1
 72a:	f5 cf       	rjmp	.-22     	; 0x716 <__stack+0x217>
 72c:	22 20       	and	r2, r2
 72e:	09 f4       	brne	.+2      	; 0x732 <__stack+0x233>
 730:	42 ce       	rjmp	.-892    	; 0x3b6 <vfprintf+0x24>
 732:	b6 01       	movw	r22, r12
 734:	80 e2       	ldi	r24, 0x20	; 32
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 04 05 	call	0xa08	; 0xa08 <fputc>
 73c:	2a 94       	dec	r2
 73e:	f6 cf       	rjmp	.-20     	; 0x72c <__stack+0x22d>
 740:	f6 01       	movw	r30, r12
 742:	86 81       	ldd	r24, Z+6	; 0x06
 744:	97 81       	ldd	r25, Z+7	; 0x07
 746:	02 c0       	rjmp	.+4      	; 0x74c <__stack+0x24d>
 748:	8f ef       	ldi	r24, 0xFF	; 255
 74a:	9f ef       	ldi	r25, 0xFF	; 255
 74c:	2b 96       	adiw	r28, 0x0b	; 11
 74e:	e2 e1       	ldi	r30, 0x12	; 18
 750:	0c 94 ba 05 	jmp	0xb74	; 0xb74 <__epilogue_restores__>

00000754 <calloc>:
 754:	0f 93       	push	r16
 756:	1f 93       	push	r17
 758:	cf 93       	push	r28
 75a:	df 93       	push	r29
 75c:	86 9f       	mul	r24, r22
 75e:	80 01       	movw	r16, r0
 760:	87 9f       	mul	r24, r23
 762:	10 0d       	add	r17, r0
 764:	96 9f       	mul	r25, r22
 766:	10 0d       	add	r17, r0
 768:	11 24       	eor	r1, r1
 76a:	c8 01       	movw	r24, r16
 76c:	0e 94 c6 03 	call	0x78c	; 0x78c <malloc>
 770:	ec 01       	movw	r28, r24
 772:	00 97       	sbiw	r24, 0x00	; 0
 774:	29 f0       	breq	.+10     	; 0x780 <calloc+0x2c>
 776:	a8 01       	movw	r20, r16
 778:	60 e0       	ldi	r22, 0x00	; 0
 77a:	70 e0       	ldi	r23, 0x00	; 0
 77c:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <memset>
 780:	ce 01       	movw	r24, r28
 782:	df 91       	pop	r29
 784:	cf 91       	pop	r28
 786:	1f 91       	pop	r17
 788:	0f 91       	pop	r16
 78a:	08 95       	ret

0000078c <malloc>:
 78c:	0f 93       	push	r16
 78e:	1f 93       	push	r17
 790:	cf 93       	push	r28
 792:	df 93       	push	r29
 794:	82 30       	cpi	r24, 0x02	; 2
 796:	91 05       	cpc	r25, r1
 798:	10 f4       	brcc	.+4      	; 0x79e <malloc+0x12>
 79a:	82 e0       	ldi	r24, 0x02	; 2
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	e0 91 1b 01 	lds	r30, 0x011B	; 0x80011b <__flp>
 7a2:	f0 91 1c 01 	lds	r31, 0x011C	; 0x80011c <__flp+0x1>
 7a6:	20 e0       	ldi	r18, 0x00	; 0
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	a0 e0       	ldi	r26, 0x00	; 0
 7ac:	b0 e0       	ldi	r27, 0x00	; 0
 7ae:	30 97       	sbiw	r30, 0x00	; 0
 7b0:	19 f1       	breq	.+70     	; 0x7f8 <malloc+0x6c>
 7b2:	40 81       	ld	r20, Z
 7b4:	51 81       	ldd	r21, Z+1	; 0x01
 7b6:	02 81       	ldd	r16, Z+2	; 0x02
 7b8:	13 81       	ldd	r17, Z+3	; 0x03
 7ba:	48 17       	cp	r20, r24
 7bc:	59 07       	cpc	r21, r25
 7be:	c8 f0       	brcs	.+50     	; 0x7f2 <malloc+0x66>
 7c0:	84 17       	cp	r24, r20
 7c2:	95 07       	cpc	r25, r21
 7c4:	69 f4       	brne	.+26     	; 0x7e0 <malloc+0x54>
 7c6:	10 97       	sbiw	r26, 0x00	; 0
 7c8:	31 f0       	breq	.+12     	; 0x7d6 <malloc+0x4a>
 7ca:	12 96       	adiw	r26, 0x02	; 2
 7cc:	0c 93       	st	X, r16
 7ce:	12 97       	sbiw	r26, 0x02	; 2
 7d0:	13 96       	adiw	r26, 0x03	; 3
 7d2:	1c 93       	st	X, r17
 7d4:	27 c0       	rjmp	.+78     	; 0x824 <malloc+0x98>
 7d6:	00 93 1b 01 	sts	0x011B, r16	; 0x80011b <__flp>
 7da:	10 93 1c 01 	sts	0x011C, r17	; 0x80011c <__flp+0x1>
 7de:	22 c0       	rjmp	.+68     	; 0x824 <malloc+0x98>
 7e0:	21 15       	cp	r18, r1
 7e2:	31 05       	cpc	r19, r1
 7e4:	19 f0       	breq	.+6      	; 0x7ec <malloc+0x60>
 7e6:	42 17       	cp	r20, r18
 7e8:	53 07       	cpc	r21, r19
 7ea:	18 f4       	brcc	.+6      	; 0x7f2 <malloc+0x66>
 7ec:	9a 01       	movw	r18, r20
 7ee:	bd 01       	movw	r22, r26
 7f0:	ef 01       	movw	r28, r30
 7f2:	df 01       	movw	r26, r30
 7f4:	f8 01       	movw	r30, r16
 7f6:	db cf       	rjmp	.-74     	; 0x7ae <malloc+0x22>
 7f8:	21 15       	cp	r18, r1
 7fa:	31 05       	cpc	r19, r1
 7fc:	f9 f0       	breq	.+62     	; 0x83c <malloc+0xb0>
 7fe:	28 1b       	sub	r18, r24
 800:	39 0b       	sbc	r19, r25
 802:	24 30       	cpi	r18, 0x04	; 4
 804:	31 05       	cpc	r19, r1
 806:	80 f4       	brcc	.+32     	; 0x828 <malloc+0x9c>
 808:	8a 81       	ldd	r24, Y+2	; 0x02
 80a:	9b 81       	ldd	r25, Y+3	; 0x03
 80c:	61 15       	cp	r22, r1
 80e:	71 05       	cpc	r23, r1
 810:	21 f0       	breq	.+8      	; 0x81a <malloc+0x8e>
 812:	fb 01       	movw	r30, r22
 814:	93 83       	std	Z+3, r25	; 0x03
 816:	82 83       	std	Z+2, r24	; 0x02
 818:	04 c0       	rjmp	.+8      	; 0x822 <malloc+0x96>
 81a:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <__flp+0x1>
 81e:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <__flp>
 822:	fe 01       	movw	r30, r28
 824:	32 96       	adiw	r30, 0x02	; 2
 826:	44 c0       	rjmp	.+136    	; 0x8b0 <malloc+0x124>
 828:	fe 01       	movw	r30, r28
 82a:	e2 0f       	add	r30, r18
 82c:	f3 1f       	adc	r31, r19
 82e:	81 93       	st	Z+, r24
 830:	91 93       	st	Z+, r25
 832:	22 50       	subi	r18, 0x02	; 2
 834:	31 09       	sbc	r19, r1
 836:	39 83       	std	Y+1, r19	; 0x01
 838:	28 83       	st	Y, r18
 83a:	3a c0       	rjmp	.+116    	; 0x8b0 <malloc+0x124>
 83c:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <__brkval>
 840:	30 91 1a 01 	lds	r19, 0x011A	; 0x80011a <__brkval+0x1>
 844:	23 2b       	or	r18, r19
 846:	41 f4       	brne	.+16     	; 0x858 <malloc+0xcc>
 848:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 84c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 850:	30 93 1a 01 	sts	0x011A, r19	; 0x80011a <__brkval+0x1>
 854:	20 93 19 01 	sts	0x0119, r18	; 0x800119 <__brkval>
 858:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 85c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 860:	21 15       	cp	r18, r1
 862:	31 05       	cpc	r19, r1
 864:	41 f4       	brne	.+16     	; 0x876 <malloc+0xea>
 866:	2d b7       	in	r18, 0x3d	; 61
 868:	3e b7       	in	r19, 0x3e	; 62
 86a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 86e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 872:	24 1b       	sub	r18, r20
 874:	35 0b       	sbc	r19, r21
 876:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <__brkval>
 87a:	f0 91 1a 01 	lds	r31, 0x011A	; 0x80011a <__brkval+0x1>
 87e:	e2 17       	cp	r30, r18
 880:	f3 07       	cpc	r31, r19
 882:	a0 f4       	brcc	.+40     	; 0x8ac <malloc+0x120>
 884:	2e 1b       	sub	r18, r30
 886:	3f 0b       	sbc	r19, r31
 888:	28 17       	cp	r18, r24
 88a:	39 07       	cpc	r19, r25
 88c:	78 f0       	brcs	.+30     	; 0x8ac <malloc+0x120>
 88e:	ac 01       	movw	r20, r24
 890:	4e 5f       	subi	r20, 0xFE	; 254
 892:	5f 4f       	sbci	r21, 0xFF	; 255
 894:	24 17       	cp	r18, r20
 896:	35 07       	cpc	r19, r21
 898:	48 f0       	brcs	.+18     	; 0x8ac <malloc+0x120>
 89a:	4e 0f       	add	r20, r30
 89c:	5f 1f       	adc	r21, r31
 89e:	50 93 1a 01 	sts	0x011A, r21	; 0x80011a <__brkval+0x1>
 8a2:	40 93 19 01 	sts	0x0119, r20	; 0x800119 <__brkval>
 8a6:	81 93       	st	Z+, r24
 8a8:	91 93       	st	Z+, r25
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <malloc+0x124>
 8ac:	e0 e0       	ldi	r30, 0x00	; 0
 8ae:	f0 e0       	ldi	r31, 0x00	; 0
 8b0:	cf 01       	movw	r24, r30
 8b2:	df 91       	pop	r29
 8b4:	cf 91       	pop	r28
 8b6:	1f 91       	pop	r17
 8b8:	0f 91       	pop	r16
 8ba:	08 95       	ret

000008bc <free>:
 8bc:	cf 93       	push	r28
 8be:	df 93       	push	r29
 8c0:	00 97       	sbiw	r24, 0x00	; 0
 8c2:	09 f4       	brne	.+2      	; 0x8c6 <free+0xa>
 8c4:	81 c0       	rjmp	.+258    	; 0x9c8 <free+0x10c>
 8c6:	fc 01       	movw	r30, r24
 8c8:	32 97       	sbiw	r30, 0x02	; 2
 8ca:	13 82       	std	Z+3, r1	; 0x03
 8cc:	12 82       	std	Z+2, r1	; 0x02
 8ce:	a0 91 1b 01 	lds	r26, 0x011B	; 0x80011b <__flp>
 8d2:	b0 91 1c 01 	lds	r27, 0x011C	; 0x80011c <__flp+0x1>
 8d6:	10 97       	sbiw	r26, 0x00	; 0
 8d8:	81 f4       	brne	.+32     	; 0x8fa <free+0x3e>
 8da:	20 81       	ld	r18, Z
 8dc:	31 81       	ldd	r19, Z+1	; 0x01
 8de:	82 0f       	add	r24, r18
 8e0:	93 1f       	adc	r25, r19
 8e2:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <__brkval>
 8e6:	30 91 1a 01 	lds	r19, 0x011A	; 0x80011a <__brkval+0x1>
 8ea:	28 17       	cp	r18, r24
 8ec:	39 07       	cpc	r19, r25
 8ee:	51 f5       	brne	.+84     	; 0x944 <free+0x88>
 8f0:	f0 93 1a 01 	sts	0x011A, r31	; 0x80011a <__brkval+0x1>
 8f4:	e0 93 19 01 	sts	0x0119, r30	; 0x800119 <__brkval>
 8f8:	67 c0       	rjmp	.+206    	; 0x9c8 <free+0x10c>
 8fa:	ed 01       	movw	r28, r26
 8fc:	20 e0       	ldi	r18, 0x00	; 0
 8fe:	30 e0       	ldi	r19, 0x00	; 0
 900:	ce 17       	cp	r28, r30
 902:	df 07       	cpc	r29, r31
 904:	40 f4       	brcc	.+16     	; 0x916 <free+0x5a>
 906:	4a 81       	ldd	r20, Y+2	; 0x02
 908:	5b 81       	ldd	r21, Y+3	; 0x03
 90a:	9e 01       	movw	r18, r28
 90c:	41 15       	cp	r20, r1
 90e:	51 05       	cpc	r21, r1
 910:	f1 f0       	breq	.+60     	; 0x94e <free+0x92>
 912:	ea 01       	movw	r28, r20
 914:	f5 cf       	rjmp	.-22     	; 0x900 <free+0x44>
 916:	d3 83       	std	Z+3, r29	; 0x03
 918:	c2 83       	std	Z+2, r28	; 0x02
 91a:	40 81       	ld	r20, Z
 91c:	51 81       	ldd	r21, Z+1	; 0x01
 91e:	84 0f       	add	r24, r20
 920:	95 1f       	adc	r25, r21
 922:	c8 17       	cp	r28, r24
 924:	d9 07       	cpc	r29, r25
 926:	59 f4       	brne	.+22     	; 0x93e <free+0x82>
 928:	88 81       	ld	r24, Y
 92a:	99 81       	ldd	r25, Y+1	; 0x01
 92c:	84 0f       	add	r24, r20
 92e:	95 1f       	adc	r25, r21
 930:	02 96       	adiw	r24, 0x02	; 2
 932:	91 83       	std	Z+1, r25	; 0x01
 934:	80 83       	st	Z, r24
 936:	8a 81       	ldd	r24, Y+2	; 0x02
 938:	9b 81       	ldd	r25, Y+3	; 0x03
 93a:	93 83       	std	Z+3, r25	; 0x03
 93c:	82 83       	std	Z+2, r24	; 0x02
 93e:	21 15       	cp	r18, r1
 940:	31 05       	cpc	r19, r1
 942:	29 f4       	brne	.+10     	; 0x94e <free+0x92>
 944:	f0 93 1c 01 	sts	0x011C, r31	; 0x80011c <__flp+0x1>
 948:	e0 93 1b 01 	sts	0x011B, r30	; 0x80011b <__flp>
 94c:	3d c0       	rjmp	.+122    	; 0x9c8 <free+0x10c>
 94e:	e9 01       	movw	r28, r18
 950:	fb 83       	std	Y+3, r31	; 0x03
 952:	ea 83       	std	Y+2, r30	; 0x02
 954:	49 91       	ld	r20, Y+
 956:	59 91       	ld	r21, Y+
 958:	c4 0f       	add	r28, r20
 95a:	d5 1f       	adc	r29, r21
 95c:	ec 17       	cp	r30, r28
 95e:	fd 07       	cpc	r31, r29
 960:	61 f4       	brne	.+24     	; 0x97a <free+0xbe>
 962:	80 81       	ld	r24, Z
 964:	91 81       	ldd	r25, Z+1	; 0x01
 966:	84 0f       	add	r24, r20
 968:	95 1f       	adc	r25, r21
 96a:	02 96       	adiw	r24, 0x02	; 2
 96c:	e9 01       	movw	r28, r18
 96e:	99 83       	std	Y+1, r25	; 0x01
 970:	88 83       	st	Y, r24
 972:	82 81       	ldd	r24, Z+2	; 0x02
 974:	93 81       	ldd	r25, Z+3	; 0x03
 976:	9b 83       	std	Y+3, r25	; 0x03
 978:	8a 83       	std	Y+2, r24	; 0x02
 97a:	e0 e0       	ldi	r30, 0x00	; 0
 97c:	f0 e0       	ldi	r31, 0x00	; 0
 97e:	12 96       	adiw	r26, 0x02	; 2
 980:	8d 91       	ld	r24, X+
 982:	9c 91       	ld	r25, X
 984:	13 97       	sbiw	r26, 0x03	; 3
 986:	00 97       	sbiw	r24, 0x00	; 0
 988:	19 f0       	breq	.+6      	; 0x990 <free+0xd4>
 98a:	fd 01       	movw	r30, r26
 98c:	dc 01       	movw	r26, r24
 98e:	f7 cf       	rjmp	.-18     	; 0x97e <free+0xc2>
 990:	8d 91       	ld	r24, X+
 992:	9c 91       	ld	r25, X
 994:	11 97       	sbiw	r26, 0x01	; 1
 996:	9d 01       	movw	r18, r26
 998:	2e 5f       	subi	r18, 0xFE	; 254
 99a:	3f 4f       	sbci	r19, 0xFF	; 255
 99c:	82 0f       	add	r24, r18
 99e:	93 1f       	adc	r25, r19
 9a0:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <__brkval>
 9a4:	30 91 1a 01 	lds	r19, 0x011A	; 0x80011a <__brkval+0x1>
 9a8:	28 17       	cp	r18, r24
 9aa:	39 07       	cpc	r19, r25
 9ac:	69 f4       	brne	.+26     	; 0x9c8 <free+0x10c>
 9ae:	30 97       	sbiw	r30, 0x00	; 0
 9b0:	29 f4       	brne	.+10     	; 0x9bc <free+0x100>
 9b2:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__flp+0x1>
 9b6:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <__flp>
 9ba:	02 c0       	rjmp	.+4      	; 0x9c0 <free+0x104>
 9bc:	13 82       	std	Z+3, r1	; 0x03
 9be:	12 82       	std	Z+2, r1	; 0x02
 9c0:	b0 93 1a 01 	sts	0x011A, r27	; 0x80011a <__brkval+0x1>
 9c4:	a0 93 19 01 	sts	0x0119, r26	; 0x800119 <__brkval>
 9c8:	df 91       	pop	r29
 9ca:	cf 91       	pop	r28
 9cc:	08 95       	ret

000009ce <strnlen_P>:
 9ce:	fc 01       	movw	r30, r24
 9d0:	05 90       	lpm	r0, Z+
 9d2:	61 50       	subi	r22, 0x01	; 1
 9d4:	70 40       	sbci	r23, 0x00	; 0
 9d6:	01 10       	cpse	r0, r1
 9d8:	d8 f7       	brcc	.-10     	; 0x9d0 <strnlen_P+0x2>
 9da:	80 95       	com	r24
 9dc:	90 95       	com	r25
 9de:	8e 0f       	add	r24, r30
 9e0:	9f 1f       	adc	r25, r31
 9e2:	08 95       	ret

000009e4 <memset>:
 9e4:	dc 01       	movw	r26, r24
 9e6:	01 c0       	rjmp	.+2      	; 0x9ea <memset+0x6>
 9e8:	6d 93       	st	X+, r22
 9ea:	41 50       	subi	r20, 0x01	; 1
 9ec:	50 40       	sbci	r21, 0x00	; 0
 9ee:	e0 f7       	brcc	.-8      	; 0x9e8 <memset+0x4>
 9f0:	08 95       	ret

000009f2 <strnlen>:
 9f2:	fc 01       	movw	r30, r24
 9f4:	61 50       	subi	r22, 0x01	; 1
 9f6:	70 40       	sbci	r23, 0x00	; 0
 9f8:	01 90       	ld	r0, Z+
 9fa:	01 10       	cpse	r0, r1
 9fc:	d8 f7       	brcc	.-10     	; 0x9f4 <strnlen+0x2>
 9fe:	80 95       	com	r24
 a00:	90 95       	com	r25
 a02:	8e 0f       	add	r24, r30
 a04:	9f 1f       	adc	r25, r31
 a06:	08 95       	ret

00000a08 <fputc>:
 a08:	0f 93       	push	r16
 a0a:	1f 93       	push	r17
 a0c:	cf 93       	push	r28
 a0e:	df 93       	push	r29
 a10:	fb 01       	movw	r30, r22
 a12:	23 81       	ldd	r18, Z+3	; 0x03
 a14:	21 fd       	sbrc	r18, 1
 a16:	03 c0       	rjmp	.+6      	; 0xa1e <fputc+0x16>
 a18:	8f ef       	ldi	r24, 0xFF	; 255
 a1a:	9f ef       	ldi	r25, 0xFF	; 255
 a1c:	2c c0       	rjmp	.+88     	; 0xa76 <fputc+0x6e>
 a1e:	22 ff       	sbrs	r18, 2
 a20:	16 c0       	rjmp	.+44     	; 0xa4e <fputc+0x46>
 a22:	46 81       	ldd	r20, Z+6	; 0x06
 a24:	57 81       	ldd	r21, Z+7	; 0x07
 a26:	24 81       	ldd	r18, Z+4	; 0x04
 a28:	35 81       	ldd	r19, Z+5	; 0x05
 a2a:	42 17       	cp	r20, r18
 a2c:	53 07       	cpc	r21, r19
 a2e:	44 f4       	brge	.+16     	; 0xa40 <fputc+0x38>
 a30:	a0 81       	ld	r26, Z
 a32:	b1 81       	ldd	r27, Z+1	; 0x01
 a34:	9d 01       	movw	r18, r26
 a36:	2f 5f       	subi	r18, 0xFF	; 255
 a38:	3f 4f       	sbci	r19, 0xFF	; 255
 a3a:	31 83       	std	Z+1, r19	; 0x01
 a3c:	20 83       	st	Z, r18
 a3e:	8c 93       	st	X, r24
 a40:	26 81       	ldd	r18, Z+6	; 0x06
 a42:	37 81       	ldd	r19, Z+7	; 0x07
 a44:	2f 5f       	subi	r18, 0xFF	; 255
 a46:	3f 4f       	sbci	r19, 0xFF	; 255
 a48:	37 83       	std	Z+7, r19	; 0x07
 a4a:	26 83       	std	Z+6, r18	; 0x06
 a4c:	14 c0       	rjmp	.+40     	; 0xa76 <fputc+0x6e>
 a4e:	8b 01       	movw	r16, r22
 a50:	ec 01       	movw	r28, r24
 a52:	fb 01       	movw	r30, r22
 a54:	00 84       	ldd	r0, Z+8	; 0x08
 a56:	f1 85       	ldd	r31, Z+9	; 0x09
 a58:	e0 2d       	mov	r30, r0
 a5a:	09 95       	icall
 a5c:	89 2b       	or	r24, r25
 a5e:	e1 f6       	brne	.-72     	; 0xa18 <fputc+0x10>
 a60:	d8 01       	movw	r26, r16
 a62:	16 96       	adiw	r26, 0x06	; 6
 a64:	8d 91       	ld	r24, X+
 a66:	9c 91       	ld	r25, X
 a68:	17 97       	sbiw	r26, 0x07	; 7
 a6a:	01 96       	adiw	r24, 0x01	; 1
 a6c:	17 96       	adiw	r26, 0x07	; 7
 a6e:	9c 93       	st	X, r25
 a70:	8e 93       	st	-X, r24
 a72:	16 97       	sbiw	r26, 0x06	; 6
 a74:	ce 01       	movw	r24, r28
 a76:	df 91       	pop	r29
 a78:	cf 91       	pop	r28
 a7a:	1f 91       	pop	r17
 a7c:	0f 91       	pop	r16
 a7e:	08 95       	ret

00000a80 <__ultoa_invert>:
 a80:	fa 01       	movw	r30, r20
 a82:	aa 27       	eor	r26, r26
 a84:	28 30       	cpi	r18, 0x08	; 8
 a86:	51 f1       	breq	.+84     	; 0xadc <__ultoa_invert+0x5c>
 a88:	20 31       	cpi	r18, 0x10	; 16
 a8a:	81 f1       	breq	.+96     	; 0xaec <__ultoa_invert+0x6c>
 a8c:	e8 94       	clt
 a8e:	6f 93       	push	r22
 a90:	6e 7f       	andi	r22, 0xFE	; 254
 a92:	6e 5f       	subi	r22, 0xFE	; 254
 a94:	7f 4f       	sbci	r23, 0xFF	; 255
 a96:	8f 4f       	sbci	r24, 0xFF	; 255
 a98:	9f 4f       	sbci	r25, 0xFF	; 255
 a9a:	af 4f       	sbci	r26, 0xFF	; 255
 a9c:	b1 e0       	ldi	r27, 0x01	; 1
 a9e:	3e d0       	rcall	.+124    	; 0xb1c <__ultoa_invert+0x9c>
 aa0:	b4 e0       	ldi	r27, 0x04	; 4
 aa2:	3c d0       	rcall	.+120    	; 0xb1c <__ultoa_invert+0x9c>
 aa4:	67 0f       	add	r22, r23
 aa6:	78 1f       	adc	r23, r24
 aa8:	89 1f       	adc	r24, r25
 aaa:	9a 1f       	adc	r25, r26
 aac:	a1 1d       	adc	r26, r1
 aae:	68 0f       	add	r22, r24
 ab0:	79 1f       	adc	r23, r25
 ab2:	8a 1f       	adc	r24, r26
 ab4:	91 1d       	adc	r25, r1
 ab6:	a1 1d       	adc	r26, r1
 ab8:	6a 0f       	add	r22, r26
 aba:	71 1d       	adc	r23, r1
 abc:	81 1d       	adc	r24, r1
 abe:	91 1d       	adc	r25, r1
 ac0:	a1 1d       	adc	r26, r1
 ac2:	20 d0       	rcall	.+64     	; 0xb04 <__ultoa_invert+0x84>
 ac4:	09 f4       	brne	.+2      	; 0xac8 <__ultoa_invert+0x48>
 ac6:	68 94       	set
 ac8:	3f 91       	pop	r19
 aca:	2a e0       	ldi	r18, 0x0A	; 10
 acc:	26 9f       	mul	r18, r22
 ace:	11 24       	eor	r1, r1
 ad0:	30 19       	sub	r19, r0
 ad2:	30 5d       	subi	r19, 0xD0	; 208
 ad4:	31 93       	st	Z+, r19
 ad6:	de f6       	brtc	.-74     	; 0xa8e <__ultoa_invert+0xe>
 ad8:	cf 01       	movw	r24, r30
 ada:	08 95       	ret
 adc:	46 2f       	mov	r20, r22
 ade:	47 70       	andi	r20, 0x07	; 7
 ae0:	40 5d       	subi	r20, 0xD0	; 208
 ae2:	41 93       	st	Z+, r20
 ae4:	b3 e0       	ldi	r27, 0x03	; 3
 ae6:	0f d0       	rcall	.+30     	; 0xb06 <__ultoa_invert+0x86>
 ae8:	c9 f7       	brne	.-14     	; 0xadc <__ultoa_invert+0x5c>
 aea:	f6 cf       	rjmp	.-20     	; 0xad8 <__ultoa_invert+0x58>
 aec:	46 2f       	mov	r20, r22
 aee:	4f 70       	andi	r20, 0x0F	; 15
 af0:	40 5d       	subi	r20, 0xD0	; 208
 af2:	4a 33       	cpi	r20, 0x3A	; 58
 af4:	18 f0       	brcs	.+6      	; 0xafc <__ultoa_invert+0x7c>
 af6:	49 5d       	subi	r20, 0xD9	; 217
 af8:	31 fd       	sbrc	r19, 1
 afa:	40 52       	subi	r20, 0x20	; 32
 afc:	41 93       	st	Z+, r20
 afe:	02 d0       	rcall	.+4      	; 0xb04 <__ultoa_invert+0x84>
 b00:	a9 f7       	brne	.-22     	; 0xaec <__ultoa_invert+0x6c>
 b02:	ea cf       	rjmp	.-44     	; 0xad8 <__ultoa_invert+0x58>
 b04:	b4 e0       	ldi	r27, 0x04	; 4
 b06:	a6 95       	lsr	r26
 b08:	97 95       	ror	r25
 b0a:	87 95       	ror	r24
 b0c:	77 95       	ror	r23
 b0e:	67 95       	ror	r22
 b10:	ba 95       	dec	r27
 b12:	c9 f7       	brne	.-14     	; 0xb06 <__ultoa_invert+0x86>
 b14:	00 97       	sbiw	r24, 0x00	; 0
 b16:	61 05       	cpc	r22, r1
 b18:	71 05       	cpc	r23, r1
 b1a:	08 95       	ret
 b1c:	9b 01       	movw	r18, r22
 b1e:	ac 01       	movw	r20, r24
 b20:	0a 2e       	mov	r0, r26
 b22:	06 94       	lsr	r0
 b24:	57 95       	ror	r21
 b26:	47 95       	ror	r20
 b28:	37 95       	ror	r19
 b2a:	27 95       	ror	r18
 b2c:	ba 95       	dec	r27
 b2e:	c9 f7       	brne	.-14     	; 0xb22 <__ultoa_invert+0xa2>
 b30:	62 0f       	add	r22, r18
 b32:	73 1f       	adc	r23, r19
 b34:	84 1f       	adc	r24, r20
 b36:	95 1f       	adc	r25, r21
 b38:	a0 1d       	adc	r26, r0
 b3a:	08 95       	ret

00000b3c <__prologue_saves__>:
 b3c:	2f 92       	push	r2
 b3e:	3f 92       	push	r3
 b40:	4f 92       	push	r4
 b42:	5f 92       	push	r5
 b44:	6f 92       	push	r6
 b46:	7f 92       	push	r7
 b48:	8f 92       	push	r8
 b4a:	9f 92       	push	r9
 b4c:	af 92       	push	r10
 b4e:	bf 92       	push	r11
 b50:	cf 92       	push	r12
 b52:	df 92       	push	r13
 b54:	ef 92       	push	r14
 b56:	ff 92       	push	r15
 b58:	0f 93       	push	r16
 b5a:	1f 93       	push	r17
 b5c:	cf 93       	push	r28
 b5e:	df 93       	push	r29
 b60:	cd b7       	in	r28, 0x3d	; 61
 b62:	de b7       	in	r29, 0x3e	; 62
 b64:	ca 1b       	sub	r28, r26
 b66:	db 0b       	sbc	r29, r27
 b68:	0f b6       	in	r0, 0x3f	; 63
 b6a:	f8 94       	cli
 b6c:	de bf       	out	0x3e, r29	; 62
 b6e:	0f be       	out	0x3f, r0	; 63
 b70:	cd bf       	out	0x3d, r28	; 61
 b72:	09 94       	ijmp

00000b74 <__epilogue_restores__>:
 b74:	2a 88       	ldd	r2, Y+18	; 0x12
 b76:	39 88       	ldd	r3, Y+17	; 0x11
 b78:	48 88       	ldd	r4, Y+16	; 0x10
 b7a:	5f 84       	ldd	r5, Y+15	; 0x0f
 b7c:	6e 84       	ldd	r6, Y+14	; 0x0e
 b7e:	7d 84       	ldd	r7, Y+13	; 0x0d
 b80:	8c 84       	ldd	r8, Y+12	; 0x0c
 b82:	9b 84       	ldd	r9, Y+11	; 0x0b
 b84:	aa 84       	ldd	r10, Y+10	; 0x0a
 b86:	b9 84       	ldd	r11, Y+9	; 0x09
 b88:	c8 84       	ldd	r12, Y+8	; 0x08
 b8a:	df 80       	ldd	r13, Y+7	; 0x07
 b8c:	ee 80       	ldd	r14, Y+6	; 0x06
 b8e:	fd 80       	ldd	r15, Y+5	; 0x05
 b90:	0c 81       	ldd	r16, Y+4	; 0x04
 b92:	1b 81       	ldd	r17, Y+3	; 0x03
 b94:	aa 81       	ldd	r26, Y+2	; 0x02
 b96:	b9 81       	ldd	r27, Y+1	; 0x01
 b98:	ce 0f       	add	r28, r30
 b9a:	d1 1d       	adc	r29, r1
 b9c:	0f b6       	in	r0, 0x3f	; 63
 b9e:	f8 94       	cli
 ba0:	de bf       	out	0x3e, r29	; 62
 ba2:	0f be       	out	0x3f, r0	; 63
 ba4:	cd bf       	out	0x3d, r28	; 61
 ba6:	ed 01       	movw	r28, r26
 ba8:	08 95       	ret

00000baa <_exit>:
 baa:	f8 94       	cli

00000bac <__stop_program>:
 bac:	ff cf       	rjmp	.-2      	; 0xbac <__stop_program>
